swagger: '2.0'
info:
  version: 2.0.0
  title: BoB.Traveller.API
  description: |
    The traveller API contains information about travellers including their
    tokens, payment methods and recently bought products.
basePath: /api/v2
schemes:
  - https
paths:
  '/traveller':
    get:
      tags:
        - traveller
      summary: Search for traveller
      operationId: searchTravellerInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: name
          description: Filter on name (exact)
          in: query
          required: false
          type: string
        - name: email
          description: Filter on email address
          in: query
          required: false
          type: string
          format: email
        - name: phone
          description: Filter on phone number
          in: query
          required: false
          type: string
        - name: dob
          description: Filter on date of birth
          in: query
          required: false
          type: string
          format: date
        - name: tokenId
          in: query
          description: Filter on token ID
          required: False
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/travellerInformation'
    post:
      tags:
        - traveller
      summary: Create traveller
      operationId: createTravellerInformation
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerInformation
          in: body
          description: Traveller information
          required: true
          schema:
            $ref: '#/definitions/travellerInformation'
      responses:
        '201':
          description: Traveller created
          schema:
            $ref: '#/definitions/travellerInformation'
          headers:
            location:
              description: URL of traveller information
              type: string
  '/traveller/{travellerId}':
    get:
      tags:
        - traveller
      summary: Get traveller information
      operationId: getTravellerInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/travellerInformation'
    put:
      tags:
        - traveller
      summary: Update traveller information
      operationId: updateTravellerInformation
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: travellerInformation
          in: body
          description: Traveller information to be updated
          required: true
          schema:
            $ref: '#/definitions/travellerInformation'
      responses:
        '200':
          description: Successful operation
    delete:
      tags:
        - traveller
      summary: Delete traveller information
      operationId: deleteTravellerInformation
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
      responses:
        '204':
          description: Traveller deleted
  '/traveller/{travellerId}/wallet':
    get:
      tags:
        - traveller
      summary: Get information on traveller's wallet
      operationId: getTravellerWalletInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/walletInformation'
  '/traveller/{travellerId}/wallet/transaction':
    post:
      tags:
        - traveller
      summary: Perform transaction on travellers wallet
      operationId: postTravellerWalletTransactionRequest
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/walletTransactionRequest'
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
          headers:
            location:
              description: URL of the created transaction
              type: string
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, transaction denied
        '409':
          description: Payment denied by payment service.
  '/traveller/{travellerId}/wallet/transaction/{transactionId}':
    get:
      tags:
        - traveller
      summary: Get information on traveller's wallet transaction
      operationId: getTransactionInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
        '401':
          description: Unauthorised
    patch:
      tags:
        - traveller
      summary: Update transaction
      operationId: updateTransactionInformation
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/transactionUpdate'
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
          headers:
            location:
              description: URL of the updated transaction
              type: string
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, transaction denied
  '/traveller/{travellerId}/notification':
    post:
      tags:
        - traveller
      summary: Post notification to traveller
      operationId: sendTravellerNotification
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: travellerNotification
          in: body
          description: Traveller notification message
          required: true
          schema:
            $ref: '#/definitions/travellerNotification'
      responses:
        '201':
          description: Successful operation
          headers:
            location:
              description: URL of created notification
              type: string
  '/traveller/{travellerId}/notification/{notificationId}':
    get:
      tags:
        - traveller
      summary: Get notification sent to traveller
      operationId: getTravellerNotification
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: notificationId
          in: path
          description: Notification ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/travellerNotification'
  '/token/{tokenId}/productSets':
    get:
      tags:
        - token
      summary: Get information on products sets tied to token
      operationId: getTokenProductSetInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: all
          in: query
          description: |
            Include product sets that normally are excluded, like
            archived products and products in a final state.
          required: false
          type: boolean
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/productSets'
  '/token/{tokenId}/challenge':
    get:
      tags:
        - token
      summary: Get challenge to authenticate token
      operationId: getTokenChallenge
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/tokenChallenge'
  '/token/{tokenId}/ticket':
    post:
      tags:
        - token
      summary: Purchase ticket on behalf of traveller
      operationId: requestTokenTicket
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: pid
          in: query
          description: Participant ID to purchase from
          required: true
          type: integer
          format: int64
        - name: productId
          in: query
          description: Product ID to purchase
          required: true
          type: string
        - name: travellersPerCategory
          description: Specify the number of travellers per category
          required: false
          in: body
          schema:
            $ref: '#/definitions/travellersPerCategory'
      responses:
        '201':
          description: Successful operation
          headers:
            location:
              description: URL of created ticket bundle
              type: string
  '/token/{tokenId}/wallet':
    get:
      tags:
        - token
      summary: Get information on wallet tied to token
      operationId: getTokenWalletInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/walletInformation'
  '/token/{tokenId}/wallet/transaction':
    post:
      tags:
        - token
      summary: Perform transaction on wallet tied to token
      operationId: postTokenWalletTransactionRequest
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/walletTransactionRequest'
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
          headers:
            location:
              description: URL of the created transaction
              type: string
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, transaction denied
        '409':
          description: Payment denied by payment service.
  '/token/{tokenId}/wallet/transaction/{transactionId}':
    get:
      tags:
        - token
      summary: Get information on transaction tied to token
      operationId: getTokenTransactionInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
        '401':
          description: Unauthorised
    patch:
      tags:
        - token
      summary: Update transaction tied to token
      operationId: updateTokenTransactionInformation
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/transactionUpdate'
      responses:
        '201':
          description: Successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
          headers:
            location:
              description: URL of the updated transaction
              type: string
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, transaction denied
  '/mtb/{issuerSignature}/productSets':
    get:
      tags:
        - mtb
      summary: Get information on product sets in MTB
      operationId: getMTBProductSetInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: issuerSignature
          in: path
          description: MTB issuer signature
          required: true
          type: string
          format: base64url
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/productSets'
        '401':
          description: Unauthorised
        '403':
          description: Forbidden
  '/mtb/{issuerSignature}/activate':
    post:
      tags:
        - mtb
      summary: Activate MTB
      operationId: activateMTB
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: issuerSignature
          in: path
          description: MTB issuer signature
          required: true
          type: string
          format: base64url
        - name: activationData
          in: body
          description: MTB activation data
          required: true
          schema:
            $ref: '#/definitions/activationData'
      responses:
        '204':
          description: Successful operation
        '401':
          description: Unauthorised
        '403':
          description: Forbidden
  '/productSet/{productSetId}':
    get:
      tags:
        - productSet
      summary: Get information on product set
      operationId: getProductSetInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetId
          in: path
          description: Product set ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/productSetInformation'
        '401':
          description: Unauthorised
        '403':
          description: Forbidden
  '/productSet/{productSetId}/status':
    get:
      tags:
        - productSet
      summary: Get product set status
      operationId: getProductSetStatus
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetId
          in: path
          description: Product set ID
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/productSetStatus'
        '401':
          description: Unauthorised
        '403':
          description: Forbidden
    put:
      tags:
        - productSet
      summary: Update product set status
      operationId: putProductSetStatus
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetId
          in: path
          description: Product set ID
          required: true
          type: string
        - name: productSetStatus
          in: body
          description: Product Set Status to be updated
          required: true
          schema:
            $ref: '#/definitions/productSetStatus'
      responses:
        '200':
          description: Successful operation
        '401':
          description: Unauthorised
        '403':
          description: Forbidden
  '/productSet/{productSetId}/issue':
    post:
      tags:
        - productSet
      summary: Create an equivalent product set
      operationId: issueProductSet
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetId
          in: path
          description: Product set ID
          required: true
          type: string
        - name: issueRequest
          in: body
          description: Issue request
          required: true
          schema:
            $ref: '#/definitions/issueRequest'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/productSetInformation'
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, recreation failed
  '/productSet/{productSetId}/recreate':
    post:
      tags:
        - productSet
      summary: Recreate an equivalent product set
      operationId: recreateProductSet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetId
          in: path
          description: Product set ID
          required: true
          type: string
        - name: productSetOptions
          in: body
          description: Product set options
          schema:
            $ref: '#/definitions/productSetOptions'
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/productSetInformation'
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, recreation failed
  '/ticketNotification':
    post:
      tags:
        - ticketNotification
      summary: Notification on ticket event
      operationId: createTicketNotification
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: ticketNotification
          in: body
          description: Ticket notification information
          schema:
            $ref: '#/definitions/ticketNotification'
      responses:
        '201':
          description: Created ok
        '401':
          description: Unauthorised
        '403':
          description: Forbidden, creation failed

definitions:

  ticketNotification:
    type: object
    properties:
      pid:
        description: Participant identifier
        type: integer
        format: int64
      ticketId:
        description: Ticket identifier
        type: string
      ticketLocation:
        description: Location URI to refresh ticket
        type: string
        format: uri
      cause:
        type: string
        enum:
          - stateChange
          - validityChange
          - other
      eventTime:
        description: |
          Time of the notification-triggering event as ISO 8601:2004 profile 
          extended format (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: '2020-08-28T23:20:50.52Z'
  travellerNotification:
    type: object
    required:
      - notificationId
      - notificationStatus
      - notificationMessage
    properties:
      notificationId:
        type: string
      notificationStatus:
        type: string
        enum:
          - queued
          - sent
          - acknowledged
          - discarded
      notificationLang:
        description: Language of notification message (RFC 3066)
        type: string
        example: "sv-SE"
      notificationMessage:
        description: Notification message
        type: string
      notificationExpire:
        description: |
          Expire time stamp as ISO 8601:2004 profile extended format
          (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"

  travellerInformation:
    type: object
    required:
      - travellerId
    properties:
      travellerId:
        type: string
        example: 9ACFAB16-3A5C-4310-AB88-1E96E5EB34A4
      travellerName:
        description: Name
        type: string
        example: Anders Andersson
      travellerDOB:
        description: Date of birth
        type: string
        format: date
        example: "1984-01-01"
      travellerEmail:
        description: Email address
        type: string
        format: email
        example: "user@example.com"
      travellerPhone:
        description: Phone number (E.164)
        type: string
        pattern: "^\\+[1-9]\\d{1,14}$"
        example: "+4686001000"
      travellerPhotoURL:
        description: URL to photo
        type: string
        format: uri
        example: "https://example.com/CBC392F0-C026-4201-9ABA-56915A2B5478.png"
      travellerPrefLang:
        description: Ordered list of preferred languages (RFC 3066)
        type: array
        items:
          type: string
          example: "sv-SE"
      travellerTokens:
        description: List of tokens tied to the traveller
        type: array
        items:
          $ref: '#/definitions/travellerToken'

  travellerToken:
    type: object
    additionalProperties: true
    required:
      - pid
      - tokenId
    properties:
      pid:
        $ref: '#/definitions/pid'
      serial:
        $ref: '#/definitions/serial'
      tokenId:
        type: string

  pid:
    description: Participant Identifier
    type: integer
    format: int64
    example: 1

  serial:
    description: Token serial number
    type: integer
    format: int64
    example: 42

  walletInformation:
    type: object
    additionalProperties: true
    required:
      - paymentMeans
    properties:
      paymentMeans:
        type: array
        items:
          $ref: '#/definitions/paymentMean'

  paymentMean:
    type: object
    properties:
      id:
        description: Identifier of the payment means (unique per traveller)
        type: string
        example: 3D456793-6384-4E50-AF00-636A2520065E
      preference:
        description: |
          Traveller's preference of the payment means (lower number means
          higher preference. Zero indicates no preference.)
        type: number
        example: 0
      name:
        description: User-distinguishable name of the payment means
        type: string
        example: Kundkassa
      type:
        description: Type of payment means
        type: string
        enum:
          - purse
          - paymentcard
          - mobile
          - invoice
          - other
      currency:
        description: Payment currency (ISO 4217)
        type: string
        example: SEK
      limitPIN:
        description: Transaction limit if used in combination with PIN
        type: number
        example: 10000
      limit:
        description: Transaction limit if used without PIN
        type: number
        example: 200
      tokenProofRequired:
        description: True if token proof is required for all transactions
        type: boolean
        example: true
      balance:
        description: Current balance (if available)
        type: number
        example: 200
      depositAllowed:
        description: True if deposit (negative transactionAmount) is allowed, otherwise false
        type: boolean

  walletTransactionRequest:
    type: object
    required:
      - transactionReference
      - transactionAmount
    properties:
      transactionReference:
        description: Requestors transaction reference
        type: string
      transactionDescription:
        description: User-distinguishable description of the transaction
        type: string
      transactionAmount:
        description: Total amount of the transaction (can be negative)
        type: number
        example: 120
      paymentMeansId:
        description: |
          Identifier of the payment means to use. If no paymentMeansId is
          given, the payment means with the highest preference and available
          funds will be used.
        type: string
        example: 3D456793-6384-4E50-AF00-636A2520065E
      paymentMeansPIN:
        description: User-provided PIN-code
        type: string
        pattern: "^\\d{4,}$"
        example: "1234"
      transactionCommit:
        description: |
          Set to false if transaction should be created as a reservation of
          amount, true if it should be finalised in one request (default).
        type: boolean
      tokenProof:
        $ref: '#/definitions/tokenProof'

  transactionInformation:
    type: object
    required:
      - transactionId
      - transactionReference
      - transactionAmount
    properties:
      transactionId:
        description: The transaction identifier
        type: string
      transactionReference:
        description: Requestors transaction reference
        type: string
      transactionDescription:
        description: User-distinguishable description of the transaction
        type: string
      transactionAmount:
        description: Total amount of the transaction (can be negative)
        type: number
      transactionCurrency:
        description: Currency code (ISO 4217)
        type: string
      paymentMeansId:
        description: Identifier of the payment means to use
        type: string
      transactionCommitted:
        description: |
          Set to false if transaction is a reservation of an amount, true
          if it has been finalised.
        type: boolean
      transactionCancelled:
        description: Set to true if transaction has been cancelled
        type: boolean
      transactionExpire:
        description: Timestamp when a pending transaction expires and can no longer be committed, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3).
        type: string
        format: date-time
        example: "2018-11-13T20:20:39+00:00"
      transactionCancellableExpire:
        description: Timestamp when a comitted transaction can no longer be cancelled, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3).
        type: string
        format: date-time
        example: '2018-11-13T20:20:39+00:00'
      tokenProof:
        $ref: '#/definitions/tokenProof'

  issueRequest:
    type: object
    required:
      - transactionReference
    properties:
      transactionReference:
        description: Requestors transaction reference
        type: string
      walletTransactionId:
        description: Optional wallet transaction identifier
        type: string

  transactionUpdate:
    type: object
    required:
      - action
    properties:
      action:
        description: |
          commit - to withdraw from the wallet and commit the transaction
          cancel - to cancel the wallet reservation or withdrawal
        type: string
        enum:
          - commit
          - cancel

  tokenChallenge:
    type: object
    required:
      - authenticationChallenge
    properties:
      authenticationChallenge:
        description: The challenge to be used as authentication input
        type: string
        format: base64url

  tokenProof:
    type: object
    properties:
      travellerToken:
        $ref: '#/definitions/travellerToken'
      authenticationChallenge:
        description: The challenge used as authentication input to the token
        type: string
        format: base64url
      authenticationResponse:
        description: The signed authentication input recieved from the token
        type: string
        format: base64url

  productSets:
    description: List of product information
    type: array
    items:
      $ref: '#/definitions/productSetInformation'

  productSetOptions:
    type: object
    properties:
      travellersPerCategory:
        $ref: '#/definitions/travellersPerCategory'
      productProperties:
        description: List of product properties assignments
        type: array
        items:
          $ref: '#/definitions/productProperty'

  productProperty:
    description: Product property assignments
    type: object
    required:
      - name
      - value
    properties:
      name:
        description: Product property name
        type: string
      value:
        description: Product property value
        type: string
      description:
        description: Product property description
        type: string
      surcharge:
        description: Product property surcharge
        $ref: '#/definitions/fare'

  travellersPerCategory:
    description: Information about all travellers
    type: array
    items:
      $ref: '#/definitions/travellersPerCategoryItem'

  travellersPerCategoryItem:
    type: object
    required:
      - tra
    properties:
      cat:
        description: Traveller category
        type: string
        example: "a"
      cls:
        description: Class of service
        type: string
      tra:
        description: Number of travellers
        type: number
        example: 1
      trs:
        description: Traveller Identifiers
        type: array
        items:
          type: string
      sts:
        description: Seating reservations
        type: array
        items:
          type: string
      description:
        description: Traveller description
        type: string

  productSetInformation:
    description: Product Set Information
    type: object
    required:
      - productSetId
    properties:
      productSetId:
        description: Product Set Identifier
        type: string
        example: "562FA1FA-A4C0-4D90-8E44-85E9040BDCC3"
      ticketBundles:
        type: array
        items:
          $ref: '#/definitions/ticketBundle'
      title:
        description: Product set title
        type: string
        example: "My fine ticket"
      description:
        description: Ticket description
        type: string
        example: |
          Lorem ipsum dolor sit amet ...
      rides:
        description: Ordered list of planned rides
        type: array
        items:
          $ref: '#/definitions/ride'
      conditions:
        description: Product conditions
        type: array
        items:
          type: string
          example: |
            "Bike is allowed, no extra fee. Not allowed between 0600-0900 and 1600-1800."
      status:
        $ref: '#/definitions/productSetStatus'
      timeConstraints:
        $ref: '#/definitions/timeConstraints'
      spatialConstraints:
        type: array
        items:
          $ref: '#/definitions/spatialConstraint'

  productSetStatus:
    description: Product set status
    type: string
    enum:
      - activated
      - expired
      - issued
      - recreated
      - refunded
      - revoked
    example: "issued"

  ticketBundle:
    description: Tickets issued by a participant
    type: object
    required:
      - pid
      - tickets
    properties:
      pid:
        $ref: '#/definitions/pid'
      tickets:
        type: array
        items:
          $ref: '#/definitions/ticket'
      fares:
        description: |
          List of all fares for the product set.
        type: array
        items:
          $ref: '#/definitions/fare'
      title:
        description: Product bundle title
        type: string
      description:
        description: Product bundle description
        type: string
      ticketBundleId:
        type: string

  ticket:
    type: object
    required:
      - ticketId
    properties:
      title:
        description: Product title
        type: string
      description:
        description: Product description
        type: string
      ticketId:
        description: Ticket Identifier
        type: string
        example: "7851FD3A-9DA6-48EE-B0DD-6958752539B2"
      productCategoryId:
        description: Product category identifier
        type: string
      productCategoryDescription:
        description: Product category description
        type: string
      fareCategoryId:
        description: Fare category identifier
        type: string
      fareCategoryDescription:
        description: Fare category description
        type: string
      travellersPerCategory:
        $ref: '#/definitions/travellersPerCategory'
      productProperties:
        type: array
        items:
          $ref: '#/definitions/productProperty'

  timeConstraints:
    description: Bundle time constraints
    type: object
    required:
      - timeOfIssue
    properties:
      timeOfIssue:
        description: Date and time for when product set was issued, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "2018-11-13T20:20:39+00:00"
      startOfValidity:
        description: Date and time for start of validity, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "2018-11-13T20:20:39+00:00"
      endOfValidity:
        description: Date and time for end of validity, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "2018-11-13T20:20:39+00:00"
      relativeValidity:
        description: Validity period in ISO 8601:2004 duration format (MTS8, chapter 2.4)
        type: string
        example: "PT24H"
      latestActivation:
        description: Date and time for latest activation, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "2018-11-13T20:20:39+00:00"
      latestActivationExpire:
        description: Date and time for expiry of latest activation, as
          ISO 8601:2004 profile extended format (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "2018-11-14T20:20:39+00:00"
      numberOfActivations:
        description: |
          Total number of times the product set can be activated
        type: integer
        format: int64
        example: 1
      remainingActivations:
        description: |
          Remaining number of times the product set can be activated
        type: integer
        format: int64
        example: 1
      other:
        description: Other time constraints (text)
        type: array
        items:
          type: string
          example: "Gäller ej vardagar 0600-0900 samt 1600-1800"

  spatialConstraint:
    description: Product set spatial constraints
    type: object
    properties:
      name:
        description: Other spatial constraint (text)
        type: string
      areas:
        type: array
        items:
          $ref: '#/definitions/geoAreas'

  geoAreas:
    type: object
    description: Geographical areas (union)
    properties:
      circles:
        type: array
        items:
          $ref: '#/definitions/circle'
      polygons:
        type: array
        items:
          $ref: '#/definitions/polygon'
      polylines:
        type: array
        items:
          $ref: '#/definitions/polyline'

  circle:
    description: Geographical circle (area)
    type: object
    required:
      - center
      - radius
    properties:
      center:
        description: Center of circle
        $ref: '#/definitions/geoPosition'
      radius:
        description: Radius of circle in meters
        type: number
        format: double

  polygon:
    description: Geographical polygon (area)
    type: array
    items:
      $ref: '#/definitions/geoPosition'

  polyline:
    description: Geographical polygonal path (line)
    type: array
    items:
      $ref: '#/definitions/geoPosition'

  geoPosition:
    description: Geopos (WGS84 decimal)
    type: object
    required:
      - lat
      - long
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      long:
        description: Longitude
        type: number
        format: double
      alt:
        description: Altitude
        type: number
        format: double

  ride:
    description: A ride within a journey
    type: object
    properties:
      boardingPlace:
        $ref: '#/definitions/place'
      alightingPlace:
        $ref: '#/definitions/place'
      serviceJourneyReference:
        type: string
      departureDateTime:
        type: string
        format: date-time
      arrivalDateTime:
        type: string
        format: date-time

  place:
    type: object
    properties:
      stopId:
        type: string
      name:
        type: string
        example: "Halmstad C"
      coordinate:
        $ref: '#/definitions/geoPosition'

  fare:
    description: Fare information, amount, currency and VAT.
    type: object
    required:
      - amount
      - currency
      - vatAmount
      - vatPercent
    properties:
      amount:
        description: Fare cost excluding VAT
        type: number
        format: float
      currency:
        description: Currency code (ISO 4217)
        type: string
      label:
        description: Fare label
        type: string
        example: Group discount
      description:
        description: Fare description
        type: string
      vatAmount:
        description: VAT amount
        type: number
        format: float
      vatPercent:
        description: VAT percent
        type: number
        format: float

  activationData:
    type: object
    properties:
      activationDateTime:
        description: Date and time for activation (default NOW)
        type: string
        format: date-time
      pid:
        description: Activating PID
        type: integer
        format: int64
      ticketId:
        description: Activating ticket identifier
        type: string
      eventId:
        description: Activating event identifier
        type: string
