swagger: '2.0'
info:
  version: 2.0.0
  title: BoB.Traveller.API
  description: |
    The traveller API contains information about travellers including their
    tokens, payment methods and recently bought products.
host: schemas.mobileticket.se
basePath: /api/v2
schemes:
  - https
paths:
  '/traveller':
    get:
      tags:
        - traveller
      summary: Search for traveller
      operationId: searchTravellerInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: name
          description: Filter on name (exact)
          in: query
          required: false
          type: string
        - name: email
          description: Filter on email address
          in: query
          required: false
          type: string
          format: email
        - name: phone
          description: Filter on phone number
          in: query
          required: false
          type: string
        - name: dob
          description: Filter on date of birth
          in: query
          required: false
          type: string
          format: date
        - name: tokenId
          in: query
          description: Filter on token ID
          required: False
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/travellerInformation'
    post:
      tags:
        - traveller
      summary: Create traveller
      operationId: createTravellerInformation
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerInformation
          in: body
          description: Traveller information
          required: true
          schema:
            $ref: '#/definitions/travellerInformation'
      responses:
        '201':
          description: created
          headers:
            location:
              description: URL of traveller information
              type: string
  '/traveller/{travellerId}':
    get:
      tags:
        - traveller
      summary: Get traveller information
      operationId: getTravellerInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/travellerInformation'
    put:
      tags:
        - traveller
      summary: Update traveller information
      operationId: updateTravellerInformation
      consumes:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: travellerInformation
          in: body
          description: Traveller information to be updated
          required: true
          schema:
            $ref: '#/definitions/travellerInformation'
      responses:
        '200':
          description: successful operation
    delete:
      tags:
        - traveller
      summary: Delete traveller information
      operationId: deleteTravellerInformation
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
      responses:
        '204':
          description: successful operation
  '/traveller/{travellerId}/ticket':
    post:
      tags:
        - traveller
      summary: Post request to purchase ticket on behalf of traveller
      operationId: requestTravellerTicket
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: pid
          in: query
          description: Participant ID to purchase from
          required: true
          type: integer
          format: int64
        - name: productId
          in: query
          description: Product ID to purchase
          required: true
          type: string
      responses:
        '201':
          description: successful operation
          headers:
            location:
              description: URL of created ticket bundle
              type: string
  '/traveller/{travellerId}/wallet':
    get:
      tags:
        - traveller
      summary: Get information on traveller's wallet
      operationId: getTravellerWalletInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/walletInformation'
  '/traveller/{travellerId}/wallet/transaction':
    post:
      tags:
        - traveller
      summary: Post request to perform transaction on travellers wallet
      operationId: postTravellerWalletTransactionRequest
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/walletTransactionRequest'
      responses:
        '201':
          description: successful operation
          headers:
            location:
              description: URL of the created transaction
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, transaction denied
  '/traveller/{travellerId}/wallet/transaction/{transactionId}':
    get:
      tags:
        - traveller
      summary: Get information on traveller's wallet transaction
      operationId: getTransactionInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
        '401':
          description: Unauthorized
    patch:
      tags:
        - traveller
      summary: Update transaction
      operationId: updateTransactionInformation
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/transactionUpdate'
      responses:
        '201':
          description: successful operation
          headers:
            location:
              description: URL of the updated transaction
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, transaction denied
  '/traveller/{travellerId}/notification':
    post:
      tags:
        - traveller
      summary: Post notification to traveller
      operationId: sendTravellerNotification
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: travellerNotification
          in: body
          description: Traveller notification message
          required: true
          schema:
            $ref: '#/definitions/travellerNotification'
      responses:
        '201':
          description: successful operation
          headers:
            location:
              description: URL of created notification
              type: string
  '/traveller/{travellerId}/notification/{notificationId}':
    get:
      tags:
        - traveller
      summary: Get notification sent to traveller
      operationId: getTravellerNotification
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: travellerId
          in: path
          description: Travellers ID
          required: true
          type: string
        - name: notificationId
          in: path
          description: Notification ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/travellerNotification'
  '/token/{tokenId}/productSets':
    get:
      tags:
        - token
      summary: Get information on products sets tied to token
      operationId: getTokenProductSetInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/productSets'
  '/token/{tokenId}/challenge':
    get:
      tags:
        - token
      summary: Get challenge to authenticate token
      operationId: getTokenChallenge
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/tokenChallenge'
  '/token/{tokenId}/wallet':
    get:
      tags:
        - token
      summary: Get information on wallet tied to token
      operationId: getTokenWalletInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/walletInformation'
  '/token/{tokenId}/wallet/transaction':
    post:
      tags:
        - token
      summary: Post request to perform transaction on wallet tied to token
      operationId: postTokenWalletTransactionRequest
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/walletTransactionRequest'
      responses:
        '201':
          description: successful operation
          headers:
            location:
              description: URL of the created transaction
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, transaction denied
  '/token/{tokenId}/wallet/transaction/{transactionId}':
    get:
      tags:
        - token
      summary: Get information on transaction tied to token
      operationId: getTokenTransactionInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/transactionInformation'
        '401':
          description: Unauthorized
    patch:
      tags:
        - token
      summary: Update transaction tied to token
      operationId: updateTokenTransactionInformation
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: tokenId
          in: path
          description: Token ID
          required: true
          type: string
        - name: transactionId
          in: path
          description: Transaction ID
          required: true
          type: string
        - name: walletTransaction
          in: body
          description: Transaction object
          required: true
          schema:
            $ref: '#/definitions/transactionUpdate'
      responses:
        '201':
          description: successful operation
          headers:
            location:
              description: URL of the updated transaction
              type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, transaction denied
  '/mtb/{issuerSignature}/productSets':
    get:
      tags:
        - mtb
      summary: Get information on product sets in MTB
      operationId: getMTBProductSetInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: issuerSignature
          in: path
          description: MTB issuer signature
          required: true
          type: string
          format: base64url
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/productSets'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/productSet/{productSetIdentifier}':
    get:
      tags:
        - productSet
      summary: Get information on product set
      operationId: getProductSetInformation
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetIdentifier
          in: path
          description: Product set ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/productSetInformation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/productSet/{productSetIdentifier}/status':
    get:
      tags:
        - productSet
      summary: Get product set status
      operationId: getProductSetStatus
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetIdentifier
          in: path
          description: Product set ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/productSetStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    put:
      tags:
        - productSet
      summary: Update product set status
      operationId: putProductSetStatus
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetIdentifier
          in: path
          description: Product set ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/productSetStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  '/productSet/{productSetIdentifier}/recreate':
    post:
      tags:
        - productSet
      summary: Recreate an equivalent product set
      operationId: recreateProductSet
      produces:
        - application/json
      parameters:
        - name: X-BoB-AuthToken
          in: header
          description: JWT authentication token
          required: true
          type: string
        - name: productSetIdentifier
          in: path
          description: Product set ID
          required: true
          type: string
        - name: productSetOptions
          in: body
          description: Product set options
          schema:
            $ref: '#/definitions/productSetOptions'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/productSetInformation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden, recreation failed


definitions:

  travellerNotification:
    type: object
    properties:
      notificationId:
        type: string
      notificationStatus:
        type: string
        enum:
          - queued
          - sent
          - acknowleded
          - discarded
      notificationLang:
        description: Language of notification message (RFC 3066)
        type: string
        example: "sv-SE"
      notificationMessage:
        description: Notification message
        type: string
      notificationExpire:
        description: |
          Expire time stamp as ISO 8601:2004 profile extended format
          (MTS8, chapter 2.3)
        type: string
        format: date-time
        example: "1985-04-12T23:20:50.52Z"

  travellerInformation:
    type: object
    required:
      - travellerId
    properties:
      travellerId:
        type: string
        example: 9ACFAB16-3A5C-4310-AB88-1E96E5EB34A4
      travellerName:
        description: Name
        type: string
        example: Anders Andersson
      travellerDOB:
        description: Date of birth
        type: string
        format: date
        example: "1984-01-01"
      travellerEmail:
        description: Email address
        type: string
        format: email
        example: "user@example.com"
      travellerPhone:
        description: Phone number (E.164)
        type: string
        pattern: "^\\+[1-9]\\d{1,14}$"
        example: "+4686001000"
      travellerPhotoURL:
        description: URL to photo
        type: string
        format: uri
        example: "https://example.com/CBC392F0-C026-4201-9ABA-56915A2B5478.png"
      travellerPrefLang:
        description: Ordered list of preferred languages (RFC 3066)
        type: array
        items:
          type: string
          example: "sv-SE"
      travellerTokens:
        description: List of tokens tied to the traveller
        type: array
        items:
          $ref: '#/definitions/travellerToken'

  travellerToken:
    type: object
    additionalProperties: true
    required:
      - pid
      - tokenId
    properties:
      pid:
        $ref: '#/definitions/pid'
      serial:
        $ref: '#/definitions/serial'
      tokenId:
        type: string
  pid:
    description: Participant Identifier
    type: number
    format: int64
    example: 1
  serial:
    description: Token serial number
    type: number
    format: int64
    example: 42

  walletInformation:
    type: object
    additionalProperties: true
    required:
      - paymentMeans
    properties:
      paymentMeans:
        type: array
        items:
          $ref: '#/definitions/paymentMean'

  paymentMean:
    type: object
    properties:
      id:
        description: Identifier of the payment means (unique per traveller)
        type: string
        example: 3D456793-6384-4E50-AF00-636A2520065E
      preference:
        description: |
          Traveller's preference of the payment means (lower number means
          higher preference. Zero indicates no preference.)
        type: number
        example: 0
      name:
        description: User-distinguishable name of the payment means
        type: string
        example: Kundkassa
      currency:
        description: Payment currency (ISO 4217)
        type: string
        example: SEK
      limitPIN:
        description: Transaction limit if used in combination with PIN
        type: number
        example: 10000
      limit:
        description: Transaction limit if used without PIN
        type: number
        example: 200
      tokenProofRequired:
        description: Does payment require token proof?
        type: boolean
        example: True

  walletTransactionRequest:
    type: object
    properties:
      reference:
        description: Requestors transaction reference
        type: string
      description:
        description: User-distinguishable description of the transaction
        type: string
      amount:
        description: Total amount of the transaction (can be negative)
        type: number
        example: 120
      paymentMeansId:
        description: |
          Identifier of the payment means to use. If no paymentMeansId is
          given, the payment means with the highest preference and available
          funds will be used.
        type: string
        example: 3D456793-6384-4E50-AF00-636A2520065E
      paymentMeansPIN:
        description: User-provided PIN-code
        type: string
        pattern: "^\\d{4,}$"
        example: "1234"
      commit:
        description: |
          Set to false if transaction should be created as a reservation of
          amount, true if it should be finalised in one request (default).
        type: boolean

  transactionInformation:
    type: object
    properties:
      id:
        description: The transaction identifier
        type: string
      reference:
        description: Requestors transaction reference
        type: string
      description:
        description: User-distinguishable description of the transaction
        type: string
      amount:
        description: Total amount of the transaction (can be negative)
        type: number
      paymentMeansId:
        description: Identifier of the payment means to use
        type: string
      committed:
        description: |
          Set to false if transaction is a reservation of an amount, true
          if it has been finalised.
        type: boolean
      cancelled:
        description: Set to true if transaction has been cancelled
        type: boolean
      tokenProof:
        $ref: '#/definitions/tokenProof'

  transactionUpdate:
    type: object
    properties:
      committed:
        description: |
          Set to false if transaction is a reservation of an amount, true
          if it has been finalised.
        type: boolean
      cancelled:
        description: Set to true if transaction has been cancelled
        type: boolean

  tokenChallenge:
    type: object
    properties:
      challenge:
        description: The challenge used as authentication input to the token
        type: string
        format: base64url

  tokenProof:
    type: object
    properties:
      mtb:
        description: The signed MTB retrieved from the token
        type: string
        format: base64url
      challenge:
        description: The challenge used as authentication input to the token
        type: string
        format: base64url
      response:
        description: The signed authentication input recieved from the token
        type: string
        format: base64url

  productSets:
    description: List of product information
    type: array
    items:
      $ref: '#/definitions/productSetInformation'

  productSetOptions:
     type: object
     properties:
       travellersPerCategory:
         $ref: '#/definitions/travellersPerCategory'
       productProperties:
         description: List of product properties assignments
         type: array
         items:
           $ref: '#/definitions/productProperty'

  productProperty:
     description: Product property assignments
     type: object
     required:
       - name
       - value
     properties:
       name:
         description: Product property name
         type: string
       value:
         description: Product property value
         type: string

  travellersPerCategory:
     description: Information about all travellers
     type: array
     items:
       type: object
       properties:
         cat:
           description: Traveller category
           type: string
           example: "a"
         cls:
           description: Class of service
           type: string
         tra:
           description: Number of travellers
           type: number
           example: 1
         trs:
           description: Traveller Identifiers
           type: array
           items:
             type: string
         sts:
           description: Seating reservations
           type: array
           items:
             type: string

  productSetInformation:
    description: Product Set Information
    type: object
    properties:
      productSetId:
        description: Product Set Identifier
        type: string
        example: "562FA1FA-A4C0-4D90-8E44-85E9040BDCC3"
      tickets:
        description: Ticket components
        type: array
        items:
          type: object
          properties:
            pid:
              $ref: '#/definitions/pid'
            ticketIds:
              description: Ticket Identifiers
              type: array
              items:
                description: Ticket Identifier
                type: string
              example: "7851FD3A-9DA6-48EE-B0DD-6958752539B2"
            productCategoryId:
              description: Product category identifier
              type: string
            fares:
              description: |
                List of all fares for the product set.
              type: array
              items:
                $ref: '#/definitions/fare'
            travellersPerCategory:
              $ref: '#/definitions/travellersPerCategory'
            productProperties:
              type: array
              items:
                $ref: '#/definitions/productProperty'

      title:
        description: Ticket title
        type: string
        example: "My fine ticket"
      description:
        description: Ticket description
        type: string
        example: >
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim
          ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut
          aliquip ex ea commodo consequat. Duis aute irure dolor in
          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla
          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in
          culpa qui officia deserunt mollit anim id est laborum.
      rides:
        description: Ordered list of planned rides
        type: array
        items:
          $ref: '#/definitions/ride'
      conditions:
        description: Production conditions
        type: array
        items:
          type: string
          example: |
            "Cykel får medföras utan kostnad, dock ej 0600-0900 och 1600-1800."
      status:
        $ref: '#/definitions/productSetStatus'
      remainingActivations:
        description: |
          Remaining number of times the product set can be activated
        type: number
        example: 1
      timeConstraints:
        description: Bundle time constraints
        type: object
        required:
          - timeOfIssue
        properties:
          timeOfIssue:
            description: Date and time for when product set was issued
            type: string
            format: date-time
            example: "2018-11-13T20:20:39+00:00"
          startOfValidity:
            description: Date and time for start of validity 
            type: string
            format: date-time
            example: "2018-11-13T20:20:39+00:00"
          endOfValidity:
            description: Date and time for end of validity 
            type: string
            format: date-time
            example: "2018-11-13T20:20:39+00:00"
          timeOfActivation:
            description: Date and time for when product set was activated
            type: string
            format: date-time
            example: "2018-11-13T20:20:39+00:00"
          relativeValidity:
            description: Validity period in ISO 8601 duration format
            type: string
            example: "PT24H"
          other:
            description: Other time constraints (text)
            type: array
            items:
              type: string
              example: "Gäller ej vardagar 0600-0900 samt 1600-1800"
      spatialConstraints:
        description: Product set spatial constraints
        type: array
        items:
          type: object
          properties:
            name:
              description: Other spatial constraint (text)
              type: string
            areas:
              $ref: '#/definitions/geoAreas'

  productSetStatus:
    description: Product set status
    type: string
    enum:
      - recreated
      - issued
      - activated
      - expired
      - revoked
    example: "issued"

  geoAreas:
    type: object
    description: Geographical areas (union)
    properties:
      circles:
        type: array
        items:
          $ref: '#/definitions/circle'
      polygons:
        type: array
        items:
          $ref: '#/definitions/polygon'
      polylines:
        type: array
        items:
          $ref: '#/definitions/polyline'

  circle:
    description: Geographical circle (area)
    type: object
    required:
      - center
      - radius
    properties:
      center:
        description: Center of circle
        $ref: '#/definitions/geoPosition'
      radius:
        description: Radius of circle in meters
        type: number
        format: double

  polygon:
    description: Geographical polygon (area)
    type: array
    items:
      $ref: '#/definitions/geoPosition'

  polyline:
    description: Geographical polygonal path (line)
    type: array
    items:
      $ref: '#/definitions/geoPosition'

  geoPosition:
    description: Geopos (WGS84 decimal)
    type: object
    required:
      - lat
      - long
    properties:
      lat:
        description: Latitude
        type: number
        format: double
      long:
        description: Longitude
        type: number
        format: double
      alt:
        description: Altitude
        type: number
        format: double

  ride:
    description: A ride within a journey
    type: object
    properties:
      boardingPlace:
        $ref: '#/definitions/place'
      alightingPlace:
        $ref: '#/definitions/place'
      serviceJourneyReference:
        type: string
      departureDateTime:
        type: string
        format: date-time
      arrivalDateTime:
        type: string
        format: date-time

  place:
    type: object
    properties:
      stopId:
        type: string
      name:
        type: string
        example: "Halmstad C"
      coordinate:
        $ref: '#/definitions/geoPosition'

  fare:
    description: Fare information, amount, currency and VAT.
    type: object
    required:
      - amount
      - currency
      - vatAmount
      - vatPercent
    properties:
      amount:
        description: Fare cost excluding VAT
        type: number
        format: float
      currency:
        description: Currency code (ISO 4217)
        type: string
      fareCategoryId:
        description: Type of fare
      description:
        description: Text describing the item
      vatAmount:
        description: VAT amount
        type: number
        format: float
      vatPercent:
        description: VAT percent
        type: number
        format: float
